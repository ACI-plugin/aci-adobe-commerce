<?xml version="1.0"?>

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <type name="Magento\Payment\Model\Method\Adapter">
        <plugin name="aci_payment_method_adapter_plugin" type="Aci\Payment\Plugin\Method\AdapterPlugin" sortOrder="10"
                disabled="false"/>
    </type>
    <preference for="TryzensIgnite\Notification\Model\NotificationEvents"
                type="Aci\Payment\Model\Notification\NotificationEvents"/>
    <preference for="TryzensIgnite\Notification\Cron\Process\Notification"
                type="Aci\Payment\Model\Notification\Notification"/>
    <preference for="TryzensIgnite\Notification\Model\TransactionOrderUpdater"
                type="Aci\Payment\Model\Notification\TransactionOrderUpdater"/>
    <preference for="TryzensIgnite\Common\Model\Order\OrderManager" type="Aci\Payment\Model\Order\OrderManager"/>
    <preference for="TryzensIgnite\Subscription\Model\Api\CancelSubscriptionInterface"
                type="Aci\Payment\Model\Api\CancelSubscription" />
    <preference for="TryzensIgnite\Common\Model\Api\ResponseInterface"
                type="Aci\Payment\Model\Api\AciPaymentResponseManager" />

    <!-- Payment Method Facade Configuration -->
    <virtualType name="AciPaymentGenericFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Aci\Payment\Model\Ui\AciGenericConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">AciPaymentCcBlockInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">AciPaymentGenericValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">AciPaymentGenericCommandPool</argument>
        </arguments>
    </virtualType>
    <virtualType name="AciPaymentCcFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Aci\Payment\Model\Ui\AciCcConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">AciPaymentCcBlockInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">AciPaymentCcValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">AciPaymentCcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="AciPaymentApmFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Aci\Payment\Model\Ui\AciApmConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">TryzensIgnite\Common\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">AciPaymentApmValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">AciPaymentApmCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="AciPaymentGenericValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AciPaymentGenericConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AciPaymentGenericConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">AciPaymentGenericConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="AciPaymentGenericConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Aci\Payment\Model\Ui\AciGenericConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Info Block Type for Aci CC Payment -->
    <virtualType name="AciPaymentCcBlockInfo" type="TryzensIgnite\Common\Block\Info">
        <arguments>
            <argument name="config" xsi:type="object">Aci\Payment\Gateway\Config\AciCcPaymentConfig</argument>
        </arguments>
    </virtualType>

    <!-- Value Handlers Infrastructure for Aci CC Payment -->
    <virtualType name="AciPaymentCcValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AciPaymentCcConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AciPaymentCcConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Aci\Payment\Gateway\Config\AciCcPaymentConfig</argument>
        </arguments>
    </virtualType>

    <!-- Value Handlers Infrastructure for Aci Apm Payment -->
    <virtualType name="AciPaymentApmValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AciPaymentApmConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AciPaymentApmConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">AciPaymentApmConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="AciPaymentApmConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Aci\Payment\Model\Ui\AciApmConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Payment Commands Infrastructure for Aci Payment -->
    <virtualType name="AciPaymentGenericCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="getStatus" xsi:type="string">AciPaymentGetStatusCommand</item>
                <item name="getStatusViaWebhook" xsi:type="string">AciPaymentGetStatusViaWebhookCommand</item>
                <item name="createSubscription" xsi:type="string">AciPaymentCreateSubscriptionCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Commands Infrastructure for Aci CC Payment -->
    <virtualType name="AciPaymentCcCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initTransaction" xsi:type="string">AciPaymentCcInitTransactionCommand</item>
                <item name="authorize" xsi:type="string">AciPaymentAuthorizeCommand</item>
                <item name="capture" xsi:type="string">AciPaymentCaptureCommand</item>
                <item name="refund" xsi:type="string">AciPaymentRefundCommand</item>
                <item name="cancel" xsi:type="string">AciPaymentCancelCommand</item>
                <item name="void" xsi:type="string">AciPaymentCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Commands Infrastructure for Aci Apm Payment -->
    <virtualType name="AciPaymentApmCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initTransaction" xsi:type="string">AciPaymentApmInitTransactionCommand</item>
                <item name="authorize" xsi:type="string">AciPaymentAuthorizeCommand</item>
                <item name="capture" xsi:type="string">AciPaymentCaptureCommand</item>
                <item name="refund" xsi:type="string">AciPaymentRefundCommand</item>
                <item name="cancel" xsi:type="string">AciPaymentCancelCommand</item>
                <item name="void" xsi:type="string">AciPaymentCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize Transaction Command for Aci CC Payment -->
    <virtualType name="AciPaymentCcInitTransactionCommand"
                 type="TryzensIgnite\Common\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentCcInitTransactionRequest
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">AciPaymentInitTransactionTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentCcTransactionClient
            </argument>
            <argument name="handler"
                      xsi:type="object">Aci\Payment\Gateway\Response\ResponseHandler
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize Transaction Command for Aci Apm Payment -->
    <virtualType name="AciPaymentApmInitTransactionCommand"
                 type="TryzensIgnite\Common\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AciPaymentApmInitTransactionRequest</argument>
            <argument name="transferFactory" xsi:type="object">AciPaymentInitTransactionTransferFactory</argument>
            <argument name="client" xsi:type="object">AciPaymentApmTransactionClient</argument>
            <argument name="handler" xsi:type="object">Aci\Payment\Gateway\Response\ResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Initialize Transaction Request for Aci CC Payment -->
    <virtualType name="AciPaymentCcInitTransactionRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">AciPaymentMerchantDataBuilder</item>
                <item name="base"
                      xsi:type="string">Aci\Payment\Gateway\Request\BaseRequestDataBuilder
                </item>
                <item name="payment" xsi:type="string">Aci\Payment\Gateway\Request\PaymentDataBuilder</item>
                <item name="cc_payment_type"
                      xsi:type="string">Aci\Payment\Gateway\Request\CcPaymentTypeDataBuilder
                </item>
                <item name="customer"
                      xsi:type="string">Aci\Payment\Gateway\Request\CustomerDataBuilder
                </item>
                <item name="saved_cards"
                      xsi:type="string">Aci\Payment\Gateway\Request\SavedCardDataBuilder
                </item>
                <item name="address"
                      xsi:type="string">Aci\Payment\Gateway\Request\AddressDataBuilder
                </item>
                <item name="items"
                      xsi:type="string">Aci\Payment\Gateway\Request\ItemsDataBuilder
                </item>
                <item name="system_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SystemInfoDataBuilder
                </item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder
                </item>
                <item name="subscription_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>


    <!-- Initialize Transaction Request for Aci Apm Payment -->
    <virtualType name="AciPaymentApmInitTransactionRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">Aci\Payment\Gateway\Request\MerchantDataBuilder</item>
                <item name="base_request" xsi:type="string">Aci\Payment\Gateway\Request\BaseRequestDataBuilder</item>
                <item name="payment" xsi:type="string">Aci\Payment\Gateway\Request\PaymentDataBuilder</item>
                <item name="apm_payment_type"
                      xsi:type="string">Aci\Payment\Gateway\Request\ApmPaymentTypeDataBuilder
                </item>
                <item name="customer"
                      xsi:type="string">Aci\Payment\Gateway\Request\CustomerDataBuilder
                </item>
                <item name="address"
                      xsi:type="string">Aci\Payment\Gateway\Request\AddressDataBuilder
                </item>
                <item name="items"
                      xsi:type="string">Aci\Payment\Gateway\Request\ItemsDataBuilder
                </item>
                <item name="system_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SystemInfoDataBuilder
                </item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder
                </item>
                <item name="subscription_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- InitTransaction Transfer Factory for Aci Payment -->
    <virtualType name="AciPaymentInitTransactionTransferFactory"
                 type="TryzensIgnite\Common\Gateway\Http\PaymentTransferFactory">
        <arguments>
            <argument name="config" xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig</argument>
            <argument name="transactionType"
                      xsi:type="const">Aci\Payment\Helper\Constants::END_POINT_INIT_TRANSACTION
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Transaction Client for Aci CC Payment -->
    <virtualType name="AciPaymentCcTransactionClient"
                 type="Aci\Payment\Gateway\Http\Client\PaymentClient">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciCcLogger
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Transaction Client for Aci APM Payment -->
    <virtualType name="AciPaymentApmTransactionClient"
                 type="Aci\Payment\Gateway\Http\Client\PaymentClient">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciApmLogger
            </argument>
        </arguments>
    </virtualType>

    <!-- GetStatus Command for Aci Payment -->
    <virtualType name="AciPaymentGetStatusCommand"
                 type="TryzensIgnite\Common\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentGetStatusRequestBuilder
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">AciPaymentGetStatusTransactionTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentCcTransactionClient
            </argument>
            <argument name="handler"
                      xsi:type="object">Aci\Payment\Gateway\Response\ResponseHandler
            </argument>
        </arguments>
    </virtualType>

    <!-- GetStatus Transfer Factory for Aci Payment -->
    <virtualType name="AciPaymentGetStatusTransactionTransferFactory"
                 type="Aci\Payment\Gateway\Http\AciTransferFactory">
        <arguments>
            <argument name="config" xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig</argument>
            <argument name="apiEndPoint"
                      xsi:type="const">Aci\Payment\Helper\Constants::END_POINT_GET_STATUS
            </argument>
            <argument name="method"
                      xsi:type="const">Aci\Payment\Helper\Constants::API_METHOD_GET
            </argument>
        </arguments>
    </virtualType>

    <!-- GetStatus Request for Aci Payment -->
    <virtualType name="AciPaymentGetStatusRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">AciPaymentMerchantDataBuilder</item>
                <item name="checkout_id" xsi:type="string">Aci\Payment\Gateway\Request\CheckoutIdDataBuilder</item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreateSubscription Command for Aci Payment -->
    <virtualType name="AciPaymentCreateSubscriptionCommand"
                 type="TryzensIgnite\Common\Gateway\Command\GatewayWebhookCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentCreateSubscriptionRequestBuilder
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">AciPaymentCreateSubscriptionTransactionTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentCreateSubscriptionTransactionClient
            </argument>
            <argument name="handler"
                      xsi:type="object">Aci\Payment\Gateway\Response\CreateSubscriptionResponseHandler
            </argument>
        </arguments>
    </virtualType>

    <!-- CreateSubscription Request for Aci Payment -->
    <virtualType name="AciPaymentCreateSubscriptionRequestBuilder"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">Aci\Payment\Gateway\Request\MerchantDataBuilder
                </item>
                <item name="payment" xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionPaymentDataBuilder</item>
                <item name="schedule" xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionScheduleDataBuilder
                </item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Transaction Client for CreateSubscription -->
    <virtualType name="AciPaymentCreateSubscriptionTransactionClient"
                 type="Aci\Payment\Gateway\Http\Client\PaymentClient">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciLogger
            </argument>
        </arguments>
    </virtualType>

    <!-- CreateSubscription Transfer Factory for Aci Payment -->
    <virtualType name="AciPaymentCreateSubscriptionTransactionTransferFactory"
                 type="Aci\Payment\Gateway\Http\AciWebhookTransferFactory">
        <arguments>
            <argument name="apiEndPoint"
                      xsi:type="const">Aci\Payment\Helper\Constants::END_POINT_SUBSCRIPTION
            </argument>
            <argument name="method"
                      xsi:type="const">Aci\Payment\Helper\Constants::API_METHOD_POST
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Merchant  Data Builder for Aci CC Payment -->
    <virtualType name="AciPaymentMerchantDataBuilder"
                 type="Aci\Payment\Gateway\Request\MerchantDataBuilder">
        <arguments>
            <argument name="config" xsi:type="object">Aci\Payment\Gateway\Config\AciCcPaymentConfig</argument>
        </arguments>
    </virtualType>

    <!-- Magento Authorize Command -->
    <virtualType name="AciPaymentAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">TryzensIgnite\Common\Gateway\Request\TransactionIDDataBuilder
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">TryzensIgnite\Common\Gateway\Http\MagentoTransactionTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">TryzensIgnite\Common\Gateway\Http\Client\MagentoTransactionClient
            </argument>
            <argument name="handler"
                      xsi:type="object">Aci\Payment\Gateway\Response\ResponseHandler
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Action Request Helper -->
    <virtualType name="AciPaymentCcConstants"
                 type="Aci\Payment\Helper\Constants">
        <arguments>
            <argument name="paymentConfig" xsi:type="object">Aci\Payment\Gateway\Config\AciCcPaymentConfig</argument>
        </arguments>
    </virtualType>

    <!-- Payment Log Handler for Aci CC payment -->
    <type name="Aci\Payment\Logger\AciCcLogger">
        <arguments>
            <argument name="name" xsi:type="string">AciPaymentCcLogHandler</argument>
            <argument name="paymentConfig"
                      xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Aci\Payment\Logger\AciHandler</item>
            </argument>
        </arguments>
    </type>

    <!-- Payment Log Handler for Aci APM payment -->
    <type name="Aci\Payment\Logger\AciApmLogger">
        <arguments>
            <argument name="name" xsi:type="string">AciPaymentApmLogHandler</argument>
            <argument name="paymentConfig"
                      xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Aci\Payment\Logger\AciHandler</item>
            </argument>
        </arguments>
    </type>

    <!-- Aci Payment Log Handler -->
    <type name="Aci\Payment\Logger\AciHandler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="Aci\Payment\Logger\AciLogger">
        <arguments>
            <argument name="name" xsi:type="string">AciLogHandler</argument>
            <argument name="paymentConfig"
                      xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Aci\Payment\Logger\AciHandler</item>
            </argument>
        </arguments>
    </type>

    <!-- Register InitTransaction Service for Aci CC Payment-->
    <type name="Aci\Payment\Model\InitializeCcTransaction">
        <arguments>
            <argument name="commandPool" xsi:type="object">AciPaymentCcCommandPool</argument>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciCcLogger
            </argument>
        </arguments>
    </type>

    <!-- Register InitTransaction Service for Aci Apm Payment-->
    <type name="Aci\Payment\Model\InitializeApmTransaction">
        <arguments>
            <argument name="commandPool" xsi:type="object">AciPaymentApmCommandPool</argument>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciApmLogger
            </argument>
        </arguments>
    </type>

    <!-- Register GetTransaction Service -->
    <type name="Aci\Payment\Model\Request\GetStatusRequestManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">AciPaymentGenericCommandPool</argument>
        </arguments>
    </type>

    <!-- Register CreateSubscription Service -->
    <type name="Aci\Payment\Model\Request\CreateSubscriptionRequestManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">AciPaymentGenericCommandPool</argument>
        </arguments>
    </type>

    <!-- Back Office Capture Operation Command - Start -->
    <!-- Capture Command -->
    <virtualType name="AciPaymentCaptureCommand"
                 type="TryzensIgnite\Common\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentCaptureRequest
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Aci\Payment\Gateway\Http\AciBackOfficeTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentCaptureTransactionClient
            </argument>
            <argument name="validator"
                      xsi:type="object">AciPaymentCaptureResponseValidator
            </argument>
            <argument name="handler" xsi:type="object">AciPaymentCaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Capture Request Builders -->
    <virtualType name="AciPaymentCaptureRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">AciPaymentMerchantDataBuilder</item>
                <item name="payment" xsi:type="string">Aci\Payment\Gateway\Request\CaptureDataBuilder</item>
                <item name="checkout_id" xsi:type="string">Aci\Payment\Gateway\Request\CheckoutIdDataBuilder</item>
                <item name="payment_type" xsi:type="string">AciPaymentTypeCapture</item>
                <item name="system_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SystemInfoDataBuilder
                </item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder</item>
                <item name="subscription_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Type Data Builder for Aci Payment backOffice Operation -->
    <virtualType name="AciPaymentTypeCapture"
                 type="Aci\Payment\Gateway\Request\BackOfficePaymentType">
        <arguments>
            <argument name="paymentType"
                      xsi:type="const">Aci\Payment\Helper\Constants::PAYMENT_TYPE_CAPTURE
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Client for Aci Back Office Capture Operation -->
    <virtualType name="AciPaymentCaptureTransactionClient"
                 type="Aci\Payment\Gateway\Http\Client\PaymentClient">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciCaptureLogger
            </argument>
        </arguments>
    </virtualType>

    <type name="Aci\Payment\Logger\AciCaptureLogger">
        <arguments>
            <argument name="name" xsi:type="string">AciPaymentCaptureLogHandler</argument>
            <argument name="paymentConfig" xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Aci\Payment\Logger\AciHandler</item>
            </argument>
        </arguments>
    </type>

    <!-- Capture Response Validator -->
    <virtualType name="AciPaymentCaptureResponseValidator"
                 type="Aci\Payment\Gateway\Validator\PaymentResponseValidator">
        <arguments>
            <argument name="transactionType"
                      xsi:type="const">TryzensIgnite\Common\Helper\Constants::SERVICE_CAPTURE
            </argument>
        </arguments>
    </virtualType>

    <!-- Capture Response Handler -->
    <virtualType name="AciPaymentCaptureResponseHandler"
                 type="Aci\Payment\Gateway\Response\BackofficeResponseHandler">
        <arguments>
            <argument name="transactionType"
                      xsi:type="const">Aci\Payment\Helper\Constants::SERVICE_CAPTURE
            </argument>
        </arguments>
    </virtualType>
    <!-- Back Office Capture Operation Command - End -->

    <!-- Back Office Cancel Operation Command - Start -->

    <!-- Payment Cancel Command -->
    <virtualType name="AciPaymentCancelCommand" type="TryzensIgnite\Common\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentCancelRequest
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Aci\Payment\Gateway\Http\AciBackOfficeTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentCancelTransactionClient
            </argument>
            <argument name="validator"
                      xsi:type="object">AciPaymentCancelResponseValidator
            </argument>
            <argument name="handler" xsi:type="object">AciPaymentCancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Cancel Request Builders -->
    <virtualType name="AciPaymentCancelRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">AciPaymentMerchantDataBuilder</item>
                <item name="checkout_id" xsi:type="string">Aci\Payment\Gateway\Request\CheckoutIdDataBuilder</item>
                <item name="payment_type" xsi:type="string">AciPaymentTypeCancel</item>
                <item name="system_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SystemInfoDataBuilder
                </item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder
                </item>
                <item name="subscription_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Type Data Builder for Aci Payment backOffice Operation -->
    <virtualType name="AciPaymentTypeCancel"
                 type="Aci\Payment\Gateway\Request\BackOfficePaymentType">
        <arguments>
            <argument name="paymentType"
                      xsi:type="const">Aci\Payment\Helper\Constants::PAYMENT_TYPE_CANCEL
            </argument>
        </arguments>
    </virtualType>

    <!-- Payment Client for Aci Back Office Cancel Operation -->
    <virtualType name="AciPaymentCancelTransactionClient"
                 type="Aci\Payment\Gateway\Http\Client\PaymentClient">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciCancelLogger
            </argument>
        </arguments>
    </virtualType>

    <type name="Aci\Payment\Logger\AciCancelLogger">
        <arguments>
            <argument name="name" xsi:type="string">AciPaymentCancelLogHandler</argument>
            <argument name="paymentConfig" xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Aci\Payment\Logger\AciHandler</item>
            </argument>
        </arguments>
    </type>

    <!-- Cancel Response Validator -->
    <virtualType name="AciPaymentCancelResponseValidator"
                 type="Aci\Payment\Gateway\Validator\PaymentResponseValidator">
        <arguments>
            <argument name="transactionType"
                      xsi:type="const">Aci\Payment\Helper\Constants::SERVICE_VOID
            </argument>
        </arguments>
    </virtualType>

    <!-- Capture Response Handler -->
    <virtualType name="AciPaymentCancelResponseHandler"
                 type="Aci\Payment\Gateway\Response\BackofficeResponseHandler">
        <arguments>
            <argument name="transactionType"
                      xsi:type="const">Aci\Payment\Helper\Constants::SERVICE_VOID
            </argument>
        </arguments>
    </virtualType>

    <!-- Back Office Cancel Operation Command - End -->

    <!-- Back Office Refund Operation Command - Start -->
    <!-- Payment Refund Command -->
    <virtualType name="AciPaymentRefundCommand" type="TryzensIgnite\Common\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentRefundRequest
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Aci\Payment\Gateway\Http\AciBackOfficeTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentRefundTransactionClient
            </argument>
            <argument name="validator"
                      xsi:type="object">AciPaymentRefundResponseValidator
            </argument>
            <argument name="handler" xsi:type="object">AciPaymentRefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Refund Request Builders -->
    <virtualType name="AciPaymentRefundRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">AciPaymentMerchantDataBuilder</item>
                <item name="credit_memo" xsi:type="string">Aci\Payment\Gateway\Request\RefundDataBuilder</item>
                <item name="checkout_id" xsi:type="string">Aci\Payment\Gateway\Request\CheckoutIdDataBuilder</item>
                <item name="payment_type" xsi:type="string">AciPaymentTypeRefund</item>
                <item name="system_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SystemInfoDataBuilder
                </item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder
                </item>
                <item name="subscription_info"
                      xsi:type="string">Aci\Payment\Gateway\Request\SubscriptionDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Payment Type Data Builder for Aci Payment Refund backOffice Operation -->
    <virtualType name="AciPaymentTypeRefund"
                 type="Aci\Payment\Gateway\Request\BackOfficePaymentType">
        <arguments>
            <argument name="paymentType"
                      xsi:type="const">Aci\Payment\Helper\Constants::PAYMENT_TYPE_REFUND
            </argument>
        </arguments>
    </virtualType>
    <!-- Payment Client for Aci Back Office Refund Operation -->
    <virtualType name="AciPaymentRefundTransactionClient"
                 type="Aci\Payment\Gateway\Http\Client\PaymentClient">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciRefundLogger
            </argument>
        </arguments>
    </virtualType>
    <type name="Aci\Payment\Logger\AciRefundLogger">
        <arguments>
            <argument name="name" xsi:type="string">AciPaymentRefundLogHandler</argument>
            <argument name="paymentConfig" xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Aci\Payment\Logger\AciHandler</item>
            </argument>
        </arguments>
    </type>
    <!-- Refund Response Validator -->
    <virtualType name="AciPaymentRefundResponseValidator"
                 type="Aci\Payment\Gateway\Validator\PaymentResponseValidator">
        <arguments>
            <argument name="transactionType"
                      xsi:type="const">Aci\Payment\Helper\Constants::SERVICE_REFUND
            </argument>
        </arguments>
    </virtualType>
    <!-- Refund Response Handler -->
    <virtualType name="AciPaymentRefundResponseHandler"
                 type="Aci\Payment\Gateway\Response\BackofficeResponseHandler">
        <arguments>
            <argument name="transactionType"
                      xsi:type="const">Aci\Payment\Helper\Constants::SERVICE_REFUND
            </argument>
        </arguments>
    </virtualType>
    <!-- Back Office Refund Operation Command - End -->

    <!-- Aci Payment webhook logger for Cron  -->
    <type name="TryzensIgnite\Notification\Cron\Process\Notification">
        <arguments>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciCcLogger</argument>
        </arguments>
    </type>
    <type name="TryzensIgnite\Subscription\Model\Api\CancelSubscription">
        <arguments>
            <argument name="paymentConfig"
                      xsi:type="object">Aci\Payment\Gateway\Config\AciGenericPaymentConfig</argument>
        </arguments>
    </type>


    <!-- Get Status through  webhook response - Start -->
    <!-- GetStatus Command for Aci Payment -->
    <virtualType name="AciPaymentGetStatusViaWebhookCommand"
                 type="TryzensIgnite\Common\Gateway\Command\GatewayWebhookCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">AciPaymentGetStatusWebhookRequestBuilder
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">AciPaymentWebhookGetStatusTransactionTransferFactory
            </argument>
            <argument name="client"
                      xsi:type="object">AciPaymentCcTransactionClient
            </argument>
        </arguments>
    </virtualType>

    <!-- GetStatus Request for Aci Payment -->
    <virtualType name="AciPaymentGetStatusWebhookRequestBuilder"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="merchant" xsi:type="string">AciPaymentMerchantDataBuilder</item>
                <item name="checkout_id"
                      xsi:type="string">Aci\Payment\Gateway\Request\CheckoutIdWebhookDataBuilder</item>
                <item name="source"
                      xsi:type="string">Aci\Payment\Gateway\Request\SourceDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- GetStatus Transfer Factory for Aci Payment -->
    <virtualType name="AciPaymentWebhookGetStatusTransactionTransferFactory"
                 type="Aci\Payment\Gateway\Http\AciWebhookTransferFactory">
        <arguments>
            <argument name="apiEndPoint"
                      xsi:type="const">Aci\Payment\Helper\Constants::END_POINT_GET_WEBHOOK_PAYMENT_STATUS
            </argument>
            <argument name="method"
                      xsi:type="const">Aci\Payment\Helper\Constants::API_METHOD_GET
            </argument>
        </arguments>
    </virtualType>

    <!-- Register Webhook GetTransaction Service -->
    <type name="Aci\Payment\Model\WebhookEvents">
        <arguments>
            <argument name="commandPool" xsi:type="object">AciPaymentGenericCommandPool</argument>
        </arguments>
    </type>
    <!-- Get Status through  webhook response - End -->

    <type name="TryzensIgnite\Common\Model\Http\Client">
        <arguments>
            <argument name="headers" xsi:type="object">Aci\Payment\Model\Http\Headers</argument>
            <argument name="logger"
                      xsi:type="object">Aci\Payment\Logger\AciLogger
            </argument>
        </arguments>
    </type>

    <type name="TryzensIgnite\Subscription\Logger\Logger">
        <arguments>
            <argument name="paymentConfig" xsi:type="object">
                Aci\Payment\Gateway\Config\AciGenericPaymentConfig
            </argument>
        </arguments>
    </type>
</config>
